/* Custom dropdown styles */
.custom-dropdown {
    position: relative;
    width: 100%;
    height: 24px;
    background: #242424;
    border-radius: 6px;
    cursor: pointer;
    user-select: none;
}

.custom-dropdown .selected-option {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 8px;
    height: 100%;
    border-radius: 6px;
    background: var(--bg-primary-dark);
    color: #FAFAFA;
    font-size: var(--font-body);
    transition: background-color 0.2s;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}


.theme-dark .selected-option {
    border: 1px solid var(--border-primary-dark);
}

.theme-light .selected-option {
    border: 1px solid var(--border-primary-light);
}

.custom-dropdown:hover .selected-option {
    background: var(--bg-primary-dark-hover);
}

.custom-dropdown.open .selected-option {
    background-color: var(--bg-selected-dark);
}

.custom-dropdown.open .selected-option:hover  {
    background-color: var(--bg-selected-dark-hover);
}

.custom-dropdown.open .dropdown-icon svg {
    transform: rotate(180deg);
}

.dropdown-icon {
    display: flex;
    align-items: center;
    transition: transform 0.2s;
}

.dropdown-icon svg {
    transition: transform 0.2s;
}

.options-container {
    position: absolute;
    left: 0;
    margin-top: 1px;
    background: #2c2c2c;
    border-radius: 6px;
    border: 1px solid var(--border-primary-dark);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    z-index: 100;
    max-height: 0;
    overflow-y: auto;
    transition: all 0.3s;
    opacity: 0;
    visibility: hidden;
    width: 282px;
    -ms-overflow-style: none;
    scrollbar-width: none;
}

.custom-dropdown.open .options-container {
    max-height: 300px;
    opacity: 1;
    visibility: visible;
}

/* DASH specific dropdown style */
.video-item [data-type="dash"] .options-container {
    width: calc(420px - 16px); /* Width for DASH dropdowns */
    left: -115px; /* Center it */
}

/* Style for positioning wider options container */
.video-item .download-group {
    position: relative; /* Ensure proper positioning context */
}

/* Simple dropdown options */
.dropdown-option {
    padding: 8px;
    color: var(--text-secondary-dark);
    font-size: var(--font-body);
    transition: background-color 0.1s;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}


.dropdown-option.selected {
    background: var(--bg-selected-dark);
    color: var(--text-primary-dark);
}

.dropdown-option:not(.selected):hover {
    position: relative;
    color: var(--text-primary-dark);
    background: var(--bg-selected-dark);
}

.dropdown-option.selected:hover {
    background: var(--bg-selected-dark-hover);
}

/* Progress styling for dropdown options during download */
.dropdown-option.downloading {
    position: relative;
    overflow: hidden;
}

.dropdown-option.downloading::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: var(--progress, 0%);
    background-color: var(--color-success);
    opacity: 0.3;
    transition: width var(--transition-fast);
    z-index: 0;
}

.dropdown-option.downloading span {
    position: relative;
    z-index: 1;
}

/* Complete and error states for dropdown options */
.dropdown-option.complete::after {
    width: 100%;
    background-color: var(--color-success);
    opacity: 0.5;
}

.dropdown-option.error::after {
    width: 100%;
    background-color: var(--color-error);
    opacity: 0.5;
}

/* DASH multi-column layout */
.tracks-columns-container {
    display: flex;
    padding: 6px;
    gap: 4px;
    max-width: 100%;
}

.column {
    flex: 1;
    min-width: 0;
}

.column-title {
    color: var(--text-primary-dark);
    font-size: var(--font-h2);
    font-weight: 500;
    padding-bottom: 4px;
    border-bottom: 1px solid var(--border-primary-dark);
    margin-bottom: 4px;
}

.track-option {
    display: flex;
    align-items: center;
    padding: 6px 4px;
    font-size: var(--font-body);
    color: var(--text-secondary-dark);
    cursor: pointer;
    transition: background-color 0.1s;
    border-radius: 2px;
}

.track-option:hover {
    position: relative;
    min-width: 100%;
    width: fit-content;
    color: var(--text-secondary-dark-hover);
    background: var(--bg-selected-dark);
    box-shadow: 0 0 0 1px var(--color-primary);
}

.track-option.selected {
    background: var(--bg-selected-dark);
    color: var(--text-primary-dark);
}

.track-option.selected:hover {
    background: var(--bg-selected-dark-hover);
}

.track-option input {
    margin-right: 6px;
    accent-color: #2196F3;
}

.track-option.compatible {
    border-left: 3px solid #4CAF50; /* Green indicator */
}

.track-option.incompatible {
    border-left: 3px solid #F44336; /* Red indicator */
    opacity: 0.8;
}

.track-label {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.apply-button {
    display: block;
    width: calc(100% - 16px);
    margin: 0 8px 8px;
    padding: 6px;
    background: var(--color-primary);
    color: white;
    border: none;
    border-radius: 6px;
    font-size: var(--font-h2);
    cursor: pointer;
    transition: background-color 0.2s;
}

.apply-button:hover {
    background: var(--color-primary-hover);
}

/* Scrollbar styling */
.options-container::-webkit-scrollbar {
    width: 6px;
}

.options-container::-webkit-scrollbar-track {
    background: #2c2c2c;
}

.options-container::-webkit-scrollbar-thumb {
    background: #555;
    border-radius: 3px;
}

.options-container::-webkit-scrollbar-thumb:hover {
    background: #666;
}

/* Progress styling for selected option during download */
.selected-option.downloading {
    position: relative;
    overflow: hidden;
}

.selected-option.downloading::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: var(--progress, 0%);
    background-color: var(--color-success);
    opacity: 0.9;
    transition: width var(--transition-fast);
    z-index: 0;
}

.selected-option.downloading span {
    position: relative;
    z-index: 1;
}

/* Complete state styling */
.selected-option.complete {
    background-color: var(--color-success) !important;
    color: white !important;
}

/* Error state styling */
.selected-option.error {
    background-color: var(--color-error) !important;
    color: white !important;
}