// =====================================================
// INPUT COMPONENTS
// =====================================================

.input-field {
    width: 100%;
    padding: 8px 12px;
    border-radius: 6px;
    font-size: var(--font-body);
    font-family: inherit;
    transition: all var(--transition-normal);
    border: 1px solid transparent;
    @extend %theme-bg-primary;

    &::placeholder {
        @extend %theme-text-secondary;
    }

    &:focus {
        border-color: var(--color-blue);
        box-shadow: 0 0 0 2px rgba(3, 122, 251, 0.2);
        
        .theme-dark & {
            background-color: var(--bg-primary-dark);
        }
        
        .theme-light & {
            background-color: var(--bg-primary-light);
        }
    }

    // Validation states
    &.error {
        @extend %validation-error;
    }

    &.success {
        @extend %validation-success;
    }

    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;

        .theme-dark & {
            background-color: var(--bg-primary-dark);
        }

        .theme-light & {
            background-color: var(--bg-secondary-light);
        }
    }
    
    // Number input specific
    &[type="number"] {
        &::-webkit-outer-spin-button,
        &::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
    }
}

// Toggle switch component
.toggle-switch {
    @extend %interactive-base;
    position: relative;
    display: inline-block;
    width: 44px;
    height: 24px;

    input {
        opacity: 0;
        width: 0;
        height: 0;
        
        // &:focus + .toggle-slider {
        //     box-shadow: 0 0 0 2px rgba(3, 122, 251, 0.2);
        // }
        
        &:checked + .toggle-slider {
            background-color: var(--color-blue);
            border-color: var(--color-blue);

            &:before {
                transform: translateX(20px) translateY(-50%);
                background-color: white;
            }
        }
        
        &:disabled + .toggle-slider {
            opacity: 0.6;
            cursor: not-allowed;
        }
    }

    .toggle-slider {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border-radius: 12px;
        transition: all var(--transition-normal);
        
        // OFF state - contrasted background for visibility
        .theme-dark & {
            background-color: var(--bg-primary-dark);
            border: 1px solid var(--border-primary-dark);
        }
        
        .theme-light & {
            background-color: var(--bg-secondary-light);
            border: 1px solid rgba(0, 0, 0, 0.2);
        }

        &:before {
            content: "";
            position: absolute;
            height: 18px;
            width: 18px;
            left: 3px;
            top: 50%;
            transform: translateY(-50%);
            border-radius: 50%;
            transition: all var(--transition-normal);
            
            // Consistent knob color in both states
            background-color: white;
            
            .theme-dark & {
                background-color: var(--text-secondary-dark);
            }
            
            .theme-light & {
                background-color: var(--text-secondary-light);
            }
        }
    }

    &:hover input:not(:disabled) + .toggle-slider {
        .theme-dark & {
            background-color: var(--bg-primary-dark-hover);
        }

        .theme-light & {
            background-color: var(--bg-element-hover-light);
        }
    }

    &:hover input:checked:not(:disabled) + .toggle-slider {
        background-color: var(--color-blue-hover);
    }

    // // Success state
    // &.success .toggle-slider {
    //     @extend %validation-success;
    // }
}

// Input group layouts
.input-group {
    display: flex;
    flex-direction: column;
    gap: 6px;
    width: 100%;

    .input-label {
        font-size: var(--font-h2);
        font-weight: 500;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 6px;
        cursor: default;
        @extend %theme-text-primary;
    }

    .input-description {
        font-size: var(--font-body);
        margin: 0;
        opacity: 0.8;
        @extend %theme-text-secondary;
    }

    .input-error {
        font-size: var(--font-body);
        margin: 0;
        color: var(--color-red);
    }

    // Horizontal layout variant
    &.horizontal {
        flex-direction: row;
        align-items: center;
        justify-content: space-between;

        .input-label {
            flex-shrink: 1;
            margin-inline-end: 12px;
        }

        .input-field,
        .toggle-switch {
            flex-shrink: 0;
        }

        .input-field:not(.path-input) {
            width: 80px;
        }

        // Path input group with flexible layout
        &.path-input-group {
            .input-container {
                flex: 1 0;
                width: auto;
            }
            
            .path-input {
                flex: 1;
                min-width: 0;
            }
        }
    }
}

.input-container {
    display: flex;
    flex-direction: column;
    gap: 4px;
}

// Input constraint wrapper - works around input pseudo-element limitations
.input-constraint-wrapper {
    position: relative;
    display: inline-block;
    width: 100%;

    &[data-constraint] {
        &:hover::after,
        &:focus-within::after {
            content: attr(data-constraint);
            position: absolute;
            top: calc(100% + 4px);
            left: 0;
			right: 0;
			z-index: 4;
            padding: 4px 6px;
            font-size: 11px;
            border-radius: 4px;
            pointer-events: none;
            white-space: nowrap;
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
            
            .theme-dark & {
                background-color: rgba(0, 0, 0, 0.95);
                color: #fff;
            }
            
            .theme-light & {
                background-color: rgba(0, 0, 0, 0.9);
                color: #fff;
            }
        }
    }
}

.path-input.clickable {
    cursor: pointer;
    
    &:hover {
        background-color: var(--bg-element-hover-light);
        
        .theme-dark & {
            background-color: var(--bg-primary-dark-hover);
        }
    }
}
// Unit input group - combines unit toggle with number input
.unit-input-group {
    display: flex;
    align-items: center;
    gap: 8px;
    
    .unit-number-input {
        width: 80px;
        flex-shrink: 0;
    }
}

// Unit toggle component - reusable for KB/MB, mkv/mp4/webm, etc.
.unit-toggle {
    display: flex;
    border-radius: 6px;
    overflow: hidden;
    border: 1px solid var(--border-primary);
    flex-shrink: 0;
    
    .unit-option {
        padding: 8px 12px;
        font-size: var(--font-body);
        font-family: inherit;
        font-weight: 500;
        border: none;
        cursor: pointer;
        transition: all var(--transition-normal);
        position: relative;
        min-width: 40px;
        text-align: center;
        user-select: none;
        
        // Default state - implement theme styles directly without extends
        .theme-dark & {
            background-color: var(--bg-secondary-dark);
            border: 1px solid var(--border-primary-dark);
            color: var(--text-secondary-dark);
        }
        
        .theme-light & {
            background-color: var(--bg-element-light);
            color: var(--text-secondary-light);
            box-shadow: var(--bg-element-shadow-light);
        }
        
        // Borders between options
        &:not(:last-child)::after {
            content: '';
            position: absolute;
            right: 0;
            top: 20%;
            bottom: 20%;
            width: 1px;
            background-color: var(--border-primary);
            opacity: 0.3;
        }
        
        // Rounded corners for first and last options
        &:first-child {
            border-top-left-radius: 6px;
            border-bottom-left-radius: 6px;
        }
        
        &:last-child {
            border-top-right-radius: 6px;
            border-bottom-right-radius: 6px;
        }
        
        // Hover state - deeper blue like toggle-slider (only for inactive options)
        &:hover:not(.active) {
            .theme-dark & {
                background-color: var(--bg-primary-dark-hover);
                color: var(--text-primary-dark);
            }
            
            .theme-light & {
                background-color: var(--bg-element-hover-light);
                color: var(--text-primary-light);
            }
        }
        
        // Active state - blue glow
        &.active {
            background-color: var(--color-blue);
            color: white;
            
            &::after {
                display: none; // Hide border for active option
            }
        }
        
        // Disabled state
        &:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
    }
    
    // Success state for the whole toggle
    &.success {
        .unit-option.active {
            background-color: var(--color-green);
        }
    }
    
    // Error state for the whole toggle
    &.error {
        border-color: var(--color-red);
        
        .unit-option.active {
            background-color: var(--color-red);
        }
    }
}